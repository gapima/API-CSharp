// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Siderum.Infra.Context;

#nullable disable

namespace Siderum.Infra.Migrations
{
    [DbContext(typeof(SiderumContext))]
    partial class SiderumContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CredoresSituacaoCredito", b =>
                {
                    b.Property<Guid>("CredoresId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SituacaoCreditoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CredoresId", "SituacaoCreditoId");

                    b.HasIndex("SituacaoCreditoId");

                    b.ToTable("CredoresSituacaoCredito");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("RendaTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("RestricaoSerasa")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.ContatoCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("ContatoClientes");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.ContatoIndicador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IndicadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IndicadorId");

                    b.ToTable("ContatoIndicador");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.Credores", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Credores");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.Documento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Digito")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expiracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TipoDocumentoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TipoDocumentoId");

                    b.ToTable("Documentos");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.Grupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.Indicador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Indicador");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.Processo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContatoResponsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAprovacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVistoria")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estagio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IndicadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Produto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValorCompVenda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorCredito")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("IndicadorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Processos");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.RendaCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Renda")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoComprovante")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("RendaCliente");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.SituacaoCredito", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CredorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("SituacaoCredito");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.TipoDocumento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoDocumento");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CredoresSituacaoCredito", b =>
                {
                    b.HasOne("Siderum.Domain.Entities.Credores", null)
                        .WithMany()
                        .HasForeignKey("CredoresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Siderum.Domain.Entities.SituacaoCredito", null)
                        .WithMany()
                        .HasForeignKey("SituacaoCreditoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Siderum.Domain.Entities.ContatoCliente", b =>
                {
                    b.HasOne("Siderum.Domain.Entities.Cliente", "Cliente")
                        .WithMany("ContatoCliente")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.ContatoIndicador", b =>
                {
                    b.HasOne("Siderum.Domain.Entities.Indicador", "Indicador")
                        .WithMany("ContatoIndicador")
                        .HasForeignKey("IndicadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Indicador");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.Documento", b =>
                {
                    b.HasOne("Siderum.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Documentos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Siderum.Domain.Entities.TipoDocumento", "tipoDocumento")
                        .WithMany("Documentos")
                        .HasForeignKey("TipoDocumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("tipoDocumento");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.Processo", b =>
                {
                    b.HasOne("Siderum.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Processos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Siderum.Domain.Entities.Indicador", "indicador")
                        .WithMany("Processos")
                        .HasForeignKey("IndicadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Siderum.Domain.Entities.Usuario", "usuario")
                        .WithMany("Processos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("indicador");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.RendaCliente", b =>
                {
                    b.HasOne("Siderum.Domain.Entities.Cliente", "Cliente")
                        .WithMany("RendaCliente")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.SituacaoCredito", b =>
                {
                    b.HasOne("Siderum.Domain.Entities.Cliente", "Cliente")
                        .WithMany("SituacaoCredito")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.Usuario", b =>
                {
                    b.HasOne("Siderum.Domain.Entities.Grupo", "Grupo")
                        .WithMany("Usuarios")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grupo");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("ContatoCliente");

                    b.Navigation("Documentos");

                    b.Navigation("Processos");

                    b.Navigation("RendaCliente");

                    b.Navigation("SituacaoCredito");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.Grupo", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.Indicador", b =>
                {
                    b.Navigation("ContatoIndicador");

                    b.Navigation("Processos");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.TipoDocumento", b =>
                {
                    b.Navigation("Documentos");
                });

            modelBuilder.Entity("Siderum.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("Processos");
                });
#pragma warning restore 612, 618
        }
    }
}
